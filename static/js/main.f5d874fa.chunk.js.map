{"version":3,"sources":["components/Square/index.js","components/Board/index.js","components/utils/helper.js","components/Game/index.js","index.js"],"names":["Square","value","onClick","color","highLight","style","background","className","char","Board","row","col","board","renderSquare","i","j","renderRow","numCol","res","push","map","item","index","numRow","renderBoard","calculateWinner","minI","minJ","k","error","checkMaindiagonal","maxJ","checkSubDiagonal","checkVertical","checkHorizontal","Game","useState","Array","fill","setBoard","step","xIsNext","history","setHistory","ended","setEnded","current","setCurrent","asc","setAsc","resultMessage","setResultMessage","sort","newHistory","a","b","curPlayer","moves","move","charLocated","desc","display","padding","width","newBoard","curMove","length","forEach","e","jumpTo","marginBottom","fontSize","alignSelf","splice","slice","unshift","handleClick","justifyContent","fontWeight","type","id","checked","name","onChange","App","size","setSize","setError","ChooseSizeMode","onSubmit","s","target","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"8JAUeA,EARA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,QACdC,EAAQF,EAAMG,UAAY,MAAQ,QACxC,OACE,wBAAQC,MAAO,CAACC,WAAYH,GAAQI,UAAU,SAASL,QAAWA,EAAlE,SACGD,EAAMO,QCsCAC,EAxCD,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,IAAKT,EAAmB,EAAnBA,QAASU,EAAU,EAAVA,MACzBC,EAAe,SAACC,EAAGC,GACrB,OAAO,cAAC,EAAD,CACGD,EAAKA,EACLC,EAAKA,EAELb,QAAW,kBAAIA,EAAQY,EAAGC,IAC1Bd,MAAOW,EAAME,GAAGC,IAFXD,EAAEC,IAefC,EAAY,SAACN,EAAKO,GAElB,IADA,IAAMC,EAAM,GACJP,EAAM,EAAGA,EAAMM,EAAQN,IAC3BO,EAAIC,KAAKN,EAAaH,EAAKC,IAE/B,OACI,qBAAKJ,UAAU,YAAf,SACKW,EAAIE,KAAI,SAACC,EAAMC,GAAP,OAAkBD,MADCX,IAO1C,OACI,8BAxBiB,SAACa,EAAQN,GAExB,IADA,IAAMC,EAAM,GACJR,EAAM,EAAGA,EAAMa,EAAQb,IAC3BQ,EAAIC,KAAKH,EAAUN,EAAKO,IAC5B,OACI,8BACMC,EAAIE,KAAI,SAACC,EAAMC,GAAP,OAAkBD,OAmBjCG,CAAYd,EAAKC,MCuEfc,EAPS,SAACb,EAAOE,EAAGC,EAAGP,GAClC,OAxGsB,SAACI,EAAOE,EAAGC,EAAGP,GACpC,GAAa,OAATA,EACA,OAAO,KAGX,IAFA,IAAMkB,EAAOZ,EAAI,EACXa,EAAOZ,EAAI,EACTa,EAAI,EAAGA,EAAI,EAAGA,IAClB,IACI,GAAIhB,EAAMc,EAAKE,GAAGD,EAAKC,GAAGpB,OAASA,GAC/BI,EAAMc,EAAKE,EAAE,GAAGD,EAAKC,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGD,EAAKC,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGD,EAAKC,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGD,EAAKC,EAAE,GAAGpB,OAASA,EACvC,MAAO,CACH,CAACM,EAAGY,EAAKE,EAAEb,EAAGY,EAAKC,GACnB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGY,EAAKC,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGY,EAAKC,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGY,EAAKC,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGY,EAAKC,EAAE,IAG/B,MAAOC,IAIX,OAAO,KAgFCC,CAAkBlB,EAAOE,EAAGC,EAAGP,IA9ElB,SAACI,EAAOE,EAAGC,EAAGP,GACnC,GAAa,OAATA,EACA,OAAO,KAGX,IAFA,IAAMkB,EAAOZ,EAAI,EACXiB,EAAOhB,EAAI,EACTa,EAAI,EAAGA,EAAI,EAAGA,IAClB,IACI,GAAIhB,EAAMc,EAAKE,GAAGG,EAAKH,GAAGpB,OAASA,GAC/BI,EAAMc,EAAKE,EAAE,GAAGG,EAAKH,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGG,EAAKH,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGG,EAAKH,EAAE,GAAGpB,OAASA,GACnCI,EAAMc,EAAKE,EAAE,GAAGG,EAAKH,EAAE,GAAGpB,OAASA,EACvC,MAAO,CACH,CAACM,EAAGY,EAAKE,EAAEb,EAAGgB,EAAKH,GACnB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGgB,EAAKH,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGgB,EAAKH,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGgB,EAAKH,EAAE,GACvB,CAACd,EAAGY,EAAKE,EAAE,EAAEb,EAAGgB,EAAKH,EAAE,IAG/B,MAAOC,IAIX,OAAO,KAuDIG,CAAiBpB,EAAOE,EAAGC,EAAGP,IArDvB,SAACI,EAAOE,EAAGC,EAAGP,GAChC,GAAa,OAATA,EACA,OAAO,KAEX,IADA,IAAMkB,EAAOZ,EAAI,EACTc,EAAIF,EAAME,EAAIF,EAAO,EAAGE,IAC5B,IACI,GAAIhB,EAAMgB,GAAGb,GAAGP,OAASA,GACrBI,EAAMgB,EAAE,GAAGb,GAAGP,OAASA,GACvBI,EAAMgB,EAAE,GAAGb,GAAGP,OAASA,GACvBI,EAAMgB,EAAE,GAAGb,GAAGP,OAASA,GACvBI,EAAMgB,EAAE,GAAGb,GAAGP,OAASA,EAC3B,MAAO,CACH,CAACM,EAAGc,EAAEb,EAAGA,GACT,CAACD,EAAGc,EAAE,EAAEb,EAAGA,GACX,CAACD,EAAGc,EAAE,EAAEb,EAAGA,GACX,CAACD,EAAGc,EAAE,EAAEb,EAAGA,GACX,CAACD,EAAGc,EAAE,EAAEb,EAAGA,IAGnB,MAAOc,IAIX,OAAO,KA+BII,CAAcrB,EAAOE,EAAGC,EAAGP,IA7BlB,SAACI,EAAOE,EAAGC,EAAGP,GAClC,GAAa,OAATA,EACA,OAAO,KAGX,IAFA,IAAMmB,EAAOZ,EAAI,EAETa,EAAID,EAAMC,EAAID,EAAO,EAAGC,IAC5B,IACI,GAAIhB,EAAME,GAAGc,GAAGpB,OAASA,GACrBI,EAAME,GAAGc,EAAE,GAAGpB,OAASA,GACvBI,EAAME,GAAGc,EAAE,GAAGpB,OAASA,GACvBI,EAAME,GAAGc,EAAE,GAAGpB,OAASA,GACvBI,EAAME,GAAGc,EAAE,GAAGpB,OAASA,EAC3B,MAAO,CACH,CAACM,IAAEC,EAAGa,GACN,CAACd,IAAEC,EAAGa,EAAE,GACR,CAACd,IAAEC,EAAGa,EAAE,GACR,CAACd,IAAEC,EAAGa,EAAE,GACR,CAACd,IAAEC,EAAGa,EAAE,IAGhB,MAAOC,IAIX,OAAO,KAMIK,CAAgBtB,EAAOE,EAAGC,EAAGP,ICmG7B2B,EAxMF,SAAC,GAAyB,IAAxBzB,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,IAAKT,EAAa,EAAbA,QACvB,EAA0BkC,mBAAS,IAAIC,MAAM3B,GAAK4B,KAAK,CAAC9B,KAAM,KAAMJ,WAAW,IAAQgB,KAAI,kBAAM,IAAIiB,MAAM1B,GAAK2B,KAAK,CAAC9B,KAAM,KAAMJ,WAAW,QAA7I,mBAAOQ,EAAP,KAAc2B,EAAd,KACA,EAA8BH,mBAAS,CAAC,CAACI,KAAM,EAAE1B,EAAG,EAAGC,EAAG,EAAGP,KAAM,CAACA,KAAM,KAAMJ,WAAW,GAAQqC,SAAS,KAA5G,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BP,oBAAS,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAA8BT,mBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KACA,EAAsBX,oBAAS,GAA/B,mBAAOY,EAAP,KAAYC,EAAZ,KACA,EAA0Cb,mBAAS,IAAnD,mBAAOc,EAAP,KAAsBC,EAAtB,KAsGMC,EAAO,SAACJ,GAEZ,IAAIK,EAAaX,EACjBW,EAAaA,EAAWD,MAAK,SAACE,EAAGC,GAC/B,OAAIP,EACKM,EAAEd,KAAOe,EAAEf,KACZe,EAAEf,KAAOc,EAAEd,QAIrBG,EAAWU,GACXJ,EAAOD,IAELQ,EAAY,GACVC,EAAQf,EAAQtB,KAAI,SAACoB,EAAMkB,GAC/B,IAAMC,EAAcnB,EAAKhC,KAAKA,KACxBoD,EAAqB,IAAdpB,EAAKA,KAAamB,EAAc,QAAUnB,EAAK1B,EAAI,IAAK0B,EAAKzB,EAAG,IAAK,mBAC5EZ,EAAQqC,EAAKA,OAASM,EAAU,MAAQ,QAG5C,OAFEN,EAAKA,OAASM,IACdU,EAAYhB,EAAKC,QAAU,IAAM,KAEjC,sBAAkBpC,MAAS,CAACwD,QAAS,OAAQC,QAAS,OAAtD,UACE,qBAAKzD,MAAS,CAAC0D,MAAO,QAAtB,SACmB,IAAdvB,EAAKA,KAAa,QAASA,EAAKA,KAAO,KAAO,KAEnD,qBAAqBnC,MAAS,CAACwD,QAAS,QAAxC,SACE,wBAAQxD,MAAO,CAACC,WAAYH,EAAO4D,MAAO,SAAY7D,QAAS,kBAzE1D,SAACsC,GACd,GAAIA,IAASM,EAAb,CAKA,IAHA,IAAMkB,EAAWpD,EACbqD,EAAU,KACRZ,EAAaX,EACX5B,EAAI,EAAGA,EAAIuC,EAAWa,OAAQpD,IAChCuC,EAAWvC,GAAG0B,MAAQA,EACI,IAAvBa,EAAWvC,GAAG0B,OACfa,EAAWvC,GAAGN,KAAKJ,WAAY,EAC/B4D,EAASX,EAAWvC,GAAGA,GAAGuC,EAAWvC,GAAGC,GAAKsC,EAAWvC,GAAGN,MAK/DwD,EAASX,EAAWvC,GAAGA,GAAGuC,EAAWvC,GAAGC,GAAK,CAACP,KAAM,KAAMJ,WAAW,GACjEiD,EAAWvC,GAAG0B,OAASA,IACzByB,EAAUZ,EAAWvC,IAE3ByB,EAASyB,GACTrB,EAAWU,GACXN,EAAWP,GACX,IAAMtB,EAAMO,EAAgBuC,EAAUC,EAAQnD,EAAGmD,EAAQlD,EAAGkD,EAAQzD,KAAKA,MAE9D,MAAPU,GAEAA,EAAIiD,SAAQ,SAAAC,GACVJ,EAASI,EAAEtD,GAAGsD,EAAErD,GAAGX,WAAY,KAEjCmC,EAASyB,GACTnB,GAAS,GACTM,EAAiB,kBAAoBc,EAAQzD,KAAKA,OAGhDgC,GAAQ9B,EAAMC,GAChBkC,GAAS,GACTM,EAAiB,eAIjBN,GAAS,GACTM,EAAiB,MAgCwDkB,CAAO7B,EAAKA,OAAjF,SAAyFoB,KADjFpB,EAAKA,QAJLkB,MAalB,OACE,gCACE,qBAAKrD,MAAO,CAACiE,aAAc,OAAQC,SAAU,OAAQC,UAAU,UAA/D,+DAGA,8BACI,wBAAQnE,MAAS,CAACiE,aAAc,IAAKpE,QAAWA,EAAhD,4BAIJ,sBAAKK,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACIK,MAAOA,EACPF,IAAKA,EACLC,IAAOA,EACPT,QAAS,SAACY,EAAGC,GAAJ,OAtJD,SAACD,EAAGC,GACtB,IAAI6B,EAAJ,CAEA,IAAMoB,EAAWpD,EACjB,GAAyB,MAArBoD,EAASlD,GAAGC,GAAGP,KAAnB,CAEA,IAAI6C,EAAaX,EACbD,EAAUY,EAAWP,GAASL,QAC7BO,IACHP,EAAUY,EAAWA,EAAWa,OAAO,EAAIpB,GAASL,SACtD,IAAMjC,EAAOiC,EAAU,CAACjC,KAAM,IAAKJ,WAAW,GAAS,CAACI,KAAM,IAAKJ,WAAW,GAE9E4D,EAASlD,GAAGC,GAAKP,EACjB,IAAI,IAAIoB,EAAIc,EAAQwB,OAAS,EAAGtC,GAAI,EAAGA,IACjCyB,EAAWzB,GAAGY,KAAOM,GACzBO,EAAWoB,OAAO7C,EAAG,GACvByB,EAAaA,EAAWqB,MAAM,EAAG5B,EAAU,GACvCE,EACFK,EAAWlC,KAAK,CAACqB,KAAMM,EAAQ,EAAEhC,IAAGC,IAAGP,OAAMiC,SAAUA,IAEvDY,EAAWsB,QAAQ,CAACnC,KAAMM,EAAQ,EAAEhC,IAAGC,IAAGP,OAAMiC,SAAUA,IAI5DF,EAASyB,GACTrB,EAAWU,GACXN,EAAWD,EAAQ,GAEnB,IAAM5B,EAAMO,EAAgBuC,EAAUlD,EAAGC,EAAGP,EAAKA,MACtC,MAAPU,GAEAA,EAAIiD,SAAQ,SAAAC,GACVJ,EAASI,EAAEtD,GAAGsD,EAAErD,GAAGX,WAAY,KAEjCmC,EAASyB,GACTnB,GAAS,GACTM,EAAiB,kBAAoB3C,EAAKA,OAItC6C,EAAWa,OAAO,GAAKxD,EAAMC,GAE/BkC,GAAS,GACTM,EAAiB,eAIjBN,GAAS,GACTM,EAAiB,OAsGMyB,CAAY9D,EAAGC,QAGxC,sBAAKV,MAAO,CAACwD,QAAQ,OAAQgB,eAAe,iBAA5C,UACE,sBAAKtE,UAAU,YAAf,UACGqC,EAAM,KAAK,gDAAmBY,KAC/B,qBAAKjD,UAAU,cAAf,SAA8BkD,IAC9B,qBAAKpD,MAAO,CAACkE,SAAU,OAAQO,WAAY,QAA3C,SAAqD5B,OAEvD,sBAAK3C,UAAU,YAAf,UACE,iDACA,gCACI,gCACE,uBACEwE,KAAK,QACLC,GAAG,YACHC,QAASjC,EACTkC,KAAK,MACLjF,MAAM,IACNkF,SAAY,WAAK/B,GAAK,MACxB,kDAEF,gCACE,uBACE2B,KAAK,QACLC,GAAG,aACHC,SAAUjC,EACVkC,KAAK,MACLjF,MAAM,IACNkF,SAAY,WAAK/B,GAAK,MACxB,mE,OC7LZgC,EAAM,WACV,MAAwBhD,oBAAU,GAAlC,mBAAOiD,EAAP,KAAaC,EAAb,KACA,EAA0BlD,mBAAS,IAAnC,mBAAOP,EAAP,KAAc0D,EAAd,KACMC,EAAiB,WACrB,OACE,uBAAMC,SAAY,SAACrB,GACjB,IAAMsB,GAAKtB,EAAEuB,OAAO,GAAG1F,MACnByF,GAAK,EACPJ,EAAQI,GAERH,EAAS,iBAETnB,EAAEwB,kBAPN,UASE,yDAGE,uBAAOb,KAAK,SAAUG,KAAK,SAC3B,2CACA,qBAAK7E,MAAS,CAACF,MAAO,OAAtB,SAA+B0B,QAIvC,OACY,IAAVwD,EAAc,cAAC,EAAD,CAAM3E,IAAO2E,EAAM1E,IAAO0E,EAAMnF,QAAW,WAAKoF,GAAS,MAErE,cAACE,EAAD,K,OAGNK,EAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f5d874fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../index.css';\r\nconst Square = ({value, onClick})=> {\r\n    const color = value.highLight ? 'red' : 'white'\r\n    return (\r\n      <button style={{background: color}} className=\"square\" onClick = {onClick}>\r\n        {value.char}\r\n      </button>\r\n    );\r\n  }\r\nexport default Square;","import React from 'react';\r\nimport '../../index.css';\r\nimport Square from '../Square';\r\n\r\nconst Board = ({row, col, onClick, board})=> {\r\n    const renderSquare = (i, j) => {\r\n        return <Square \r\n                  i = {i}\r\n                  j = {j}\r\n                  key={i+j}\r\n                  onClick = {()=>onClick(i, j)} \r\n                  value={board[i][j]}\r\n              />;\r\n      }\r\n    const  renderBoard = (numRow, numCol)=>{\r\n          const res = []\r\n          for(var row = 0; row < numRow; row++)\r\n              res.push(renderRow(row, numCol))\r\n          return (\r\n              <div>\r\n                   {res.map((item, index) => (item))}\r\n              </div>\r\n          )\r\n      }\r\n    const renderRow = (row, numCol) =>{\r\n          const res = []\r\n          for(var col = 0; col < numCol; col++) {\r\n              res.push(renderSquare(row, col));\r\n          }\r\n          return (\r\n              <div className=\"board-row\" key={row}>\r\n                  {res.map((item, index) => (item))}\r\n              </div>\r\n          );\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {renderBoard(row, col)}\r\n        </div>\r\n        \r\n    );\r\n  }\r\nexport default Board;","const checkMaindiagonal = (board, i, j, char) =>{\r\n    if (char === null)\r\n        return null;\r\n    const minI = i - 4;\r\n    const minJ = j - 4;\r\n    for(var k = 0; k < 5; k++){\r\n        try{\r\n            if (board[minI+k][minJ+k].char === char &&\r\n                board[minI+k+1][minJ+k+1].char === char &&\r\n                board[minI+k+2][minJ+k+2].char === char &&\r\n                board[minI+k+3][minJ+k+3].char === char &&\r\n                board[minI+k+4][minJ+k+4].char === char)\r\n            return [\r\n                {i: minI+k,j: minJ+k},\r\n                {i: minI+k+1,j: minJ+k+1},\r\n                {i: minI+k+2,j: minJ+k+2},\r\n                {i: minI+k+3,j: minJ+k+3},\r\n                {i: minI+k+4,j: minJ+k+4},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkSubDiagonal = (board, i, j, char) =>{\r\n    if (char === null)\r\n        return null;\r\n    const minI = i - 4;\r\n    const maxJ = j + 4;\r\n    for(var k = 0; k < 5; k++){\r\n        try{\r\n            if (board[minI+k][maxJ-k].char === char &&\r\n                board[minI+k+1][maxJ-k-1].char === char &&\r\n                board[minI+k+2][maxJ-k-2].char === char &&\r\n                board[minI+k+3][maxJ-k-3].char === char &&\r\n                board[minI+k+4][maxJ-k-4].char === char)\r\n            return [\r\n                {i: minI+k,j: maxJ-k},\r\n                {i: minI+k+1,j: maxJ-k-1},\r\n                {i: minI+k+2,j: maxJ-k-2},\r\n                {i: minI+k+3,j: maxJ-k-3},\r\n                {i: minI+k+4,j: maxJ-k-4},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkVertical = (board, i, j, char) =>{\r\n    if (char === null)\r\n        return null;\r\n    const minI = i - 4;\r\n    for(var k = minI; k < minI + 5; k++){\r\n        try{\r\n            if (board[k][j].char === char &&\r\n                board[k+1][j].char === char &&\r\n                board[k+2][j].char === char &&\r\n                board[k+3][j].char === char &&\r\n                board[k+4][j].char === char)\r\n            return [\r\n                {i: k,j: j},\r\n                {i: k+1,j: j},\r\n                {i: k+2,j: j},\r\n                {i: k+3,j: j},\r\n                {i: k+4,j: j},\r\n            ];\r\n        }\r\n        catch (error){\r\n             \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst checkHorizontal = (board, i, j, char) =>{\r\n    if (char === null)\r\n        return null;\r\n    const minJ = j - 4;\r\n    \r\n    for(var k = minJ; k < minJ + 5; k++){\r\n        try{\r\n            if (board[i][k].char === char && \r\n                board[i][k+1].char === char && \r\n                board[i][k+2].char === char &&\r\n                board[i][k+3].char === char &&\r\n                board[i][k+4].char === char)\r\n            return [\r\n                {i,j: k},\r\n                {i,j: k+1},\r\n                {i,j: k+2},\r\n                {i,j: k+3},\r\n                {i,j: k+4},\r\n            ];\r\n        }\r\n        catch (error){\r\n            \r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst calculateWinner = (board, i, j, char) =>{\r\n    return (checkMaindiagonal(board, i, j, char)\r\n            || checkSubDiagonal(board, i, j, char)\r\n            || checkVertical(board, i, j, char)\r\n            || checkHorizontal(board, i, j, char)) ;\r\n    \r\n}\r\nexport default calculateWinner;","import React, { useState } from 'react';\r\n\r\nimport '../../index.css';\r\nimport Board from '../Board';\r\nimport calculateWinner from '../utils/helper'\r\n\r\nconst Game = ({row, col, onClick}) => {\r\n  const [board, setBoard] = useState(new Array(row).fill({char: null, highLight: false}).map(() => new Array(col).fill({char: null, highLight: false})));\r\n  const [history, setHistory] = useState([{step: 0,i: 0, j: 0, char: {char: null, highLight: false}, xIsNext: true}]);\r\n  const [ended, setEnded] = useState(false);\r\n  const [current, setCurrent] = useState(0);\r\n  const [asc, setAsc] = useState(true);\r\n  const [resultMessage, setResultMessage] = useState(\"\");\r\n \r\n  const handleClick = (i, j)=> {\r\n    if (ended)\r\n      return;\r\n    const newBoard = board; \r\n    if (newBoard[i][j].char!=null)\r\n      return;\r\n    var newHistory = history;\r\n    var xIsNext = newHistory[current].xIsNext;\r\n    if (!asc)\r\n      xIsNext = newHistory[newHistory.length-1 - current].xIsNext;\r\n    const char = xIsNext ? {char: \"X\", highLight: false} : {char: \"O\", highLight: false};\r\n\r\n    newBoard[i][j] = char;\r\n    for(var k = history.length - 1; k >=0; k--)\r\n      if (newHistory[k].step > current)\r\n      newHistory.splice(k, 1);\r\n    newHistory = newHistory.slice(0, current + 1);\r\n    if (asc)\r\n      newHistory.push({step: current+1,i, j, char, xIsNext: !xIsNext});\r\n    else\r\n      newHistory.unshift({step: current+1,i, j, char, xIsNext: !xIsNext});\r\n   \r\n    \r\n    \r\n    setBoard(newBoard);\r\n    setHistory(newHistory);\r\n    setCurrent(current+1);\r\n    \r\n    const res = calculateWinner(newBoard, i, j, char.char) \r\n    if (res != null)\r\n      {\r\n        res.forEach(e => {\r\n          newBoard[e.i][e.j].highLight = true;\r\n        });\r\n        setBoard(newBoard);\r\n        setEnded(true);\r\n        setResultMessage(\"Winner: Player \" + char.char);\r\n       \r\n      }\r\n    else{\r\n        if (newHistory.length-1 >= row * col)\r\n        {\r\n          setEnded(true);\r\n          setResultMessage(\"Draw game\");\r\n\r\n        }\r\n        else{\r\n          setEnded(false);\r\n          setResultMessage(\"\");\r\n        }\r\n    }\r\n    \r\n  }\r\n  const jumpTo = (step)=>{\r\n    if (step === current)\r\n      return;\r\n    const newBoard = board; \r\n    var curMove = null;\r\n    const newHistory = history;\r\n    for(var i = 0; i < newHistory.length; i++){\r\n      if (newHistory[i].step <= step){\r\n          if(newHistory[i].step !== 0){\r\n            newHistory[i].char.highLight = false;\r\n            newBoard[newHistory[i].i][newHistory[i].j] = newHistory[i].char;\r\n          }\r\n        \r\n      }\r\n      else\r\n        newBoard[newHistory[i].i][newHistory[i].j] = {char: null, highLight: false};\r\n        if (newHistory[i].step === step)\r\n          curMove = newHistory[i]\r\n    }\r\n    setBoard(newBoard);\r\n    setHistory(newHistory);\r\n    setCurrent(step);\r\n    const res = calculateWinner(newBoard, curMove.i, curMove.j, curMove.char.char) \r\n\r\n    if (res != null)\r\n      {\r\n        res.forEach(e => {\r\n          newBoard[e.i][e.j].highLight = true;\r\n        });\r\n        setBoard(newBoard);\r\n        setEnded(true);\r\n        setResultMessage(\"Winner: Player \" + curMove.char.char);\r\n      }\r\n    else{\r\n      if (step >= row * col){\r\n        setEnded(true);\r\n        setResultMessage(\"Draw game\");\r\n      }\r\n      else\r\n      {\r\n        setEnded(false);\r\n        setResultMessage(\"\");\r\n      }\r\n    }\r\n      \r\n\r\n  }\r\n  const sort = (asc)=>{\r\n  \r\n    var newHistory = history;\r\n    newHistory = newHistory.sort((a, b) => {\r\n      if (asc)\r\n        return a.step - b.step;\r\n      return  b.step - a.step;\r\n    })\r\n  \r\n    //history = history.reverse();\r\n    setHistory(newHistory);\r\n    setAsc(asc);\r\n  }\r\n  var curPlayer = \"\";\r\n  const moves = history.map((step, move) => {\r\n    const charLocated = step.char.char\r\n    const desc = step.step !== 0 ? charLocated + ' in (' + step.i + ',' +step.j+ ')' :'Go to game start';\r\n    const color = step.step === current ? 'red' : 'white' \r\n    if (step.step === current)\r\n        curPlayer = step.xIsNext ? 'X' : 'O';\r\n      return (\r\n        <div key = {move} style = {{display: 'flex', padding: \"5px\"}}>\r\n          <div style = {{width: '90px'}}>\r\n              {step.step !== 0 ? 'Step '+ step.step + '. ' : ''}\r\n            </div>\r\n          <div key={step.step} style = {{display: 'flex'}}>\r\n            <button style={{background: color, width: '150px', }} onClick={() => jumpTo(step.step)}>{desc}</button>\r\n          </div>\r\n        </div>\r\n        \r\n      );\r\n    });\r\n\r\n\r\n  return (\r\n    <div >\r\n      <div style={{marginBottom: '20px', fontSize: '20px', alignSelf:'center'}}>\r\n        Lý Duy Nam - 18127159 - BTCN02 - Caro refactor\r\n      </div>\r\n      <div>\r\n          <button style = {{marginBottom: 10}} onClick = {onClick}>\r\n              Quay về\r\n          </button>\r\n      </div>\r\n      <div className=\"game\" >\r\n        <div className=\"game-board\">\r\n          <Board \r\n              board={board}\r\n              row={row} \r\n              col = {col}\r\n              onClick={(i, j) => handleClick(i, j)}\r\n          />\r\n        </div>\r\n        <div style={{display:'flex', justifyContent:'space-between'}}>\r\n          <div className=\"game-info\" >\r\n            {ended?null:<div>Next Player: {curPlayer}</div>}\r\n            <div className=\"scroll-view\">{moves}</div>\r\n            <div style={{fontSize: '20px', fontWeight: 'bold'}}>{resultMessage}</div>\r\n          </div>\r\n          <div className=\"game-info\" >\r\n            <div>Sort the moves</div>\r\n            <div>\r\n                <div>\r\n                  <input \r\n                    type=\"radio\" \r\n                    id=\"Ascending\" \r\n                    checked={asc} \r\n                    name=\"rad\" \r\n                    value=\"0\"\r\n                    onChange = {()=>{sort(true)}} />\r\n                  <label >Ascending </label>\r\n                </div>\r\n                <div>\r\n                  <input \r\n                    type=\"radio\" \r\n                    id=\"Descending\" \r\n                    checked={!asc} \r\n                    name=\"rad\" \r\n                    value=\"1\" \r\n                    onChange = {()=>{sort(false)}} />\r\n                  <label >Descending </label>\r\n                </div>\r\n                \r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>);\r\n}\r\n\r\n\r\nexport default Game;","import Game from './components/Game'\r\nimport ReactDOM from 'react-dom';\r\nimport { useState } from 'react';\r\n// ========================================\r\n\r\nconst App = ()=>{\r\n  const [size, setSize] = useState(-1)\r\n  const [error, setError] = useState(\"\")\r\n  const ChooseSizeMode = ()=>{\r\n    return (\r\n      <form onSubmit = {(e)=>{\r\n        const s = +e.target[0].value;\r\n        if (s >= 5)\r\n          setSize(s);\r\n        else {\r\n          setError(\"Min size: 5x5\");\r\n        } \r\n          e.preventDefault();\r\n        }}>\r\n        <label>\r\n            Enter size of board: \r\n        </label>\r\n          <input type=\"number\"  name=\"size\" />\r\n          <button>Enter</button>\r\n          <div style = {{color: 'red'}}>{error}</div>\r\n      </form>\r\n    );\r\n  }\r\n  return (\r\n    size !== -1 ? <Game row = {size} col = {size} onClick = {()=>{setSize(-1)}}/>\r\n      : \r\n      <ChooseSizeMode/>\r\n    )\r\n}\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}